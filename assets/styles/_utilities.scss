// Breakpoints. 
$breakpoints: (
	xs: 512px,
	sm: 768px,
	md: 896px,
	lg: 1152px,
	xl: 1200px
);

// Colors.
$dark:        #30353a;
$accent:      #000cff;
$border:      #f0f1f2;
$light:       #f4f5f6;
$white:       #ffffff;
$accentLight: #fafbfc;

// Typography.
$font-heading: 'proxima-nova', Helvetica, Arial, sans-serif;
$font-body:    'proxima-nova', Helvetica, Arial, sans-serif;
$thin:   300;
$normal: 400;
$bold:   600;
$bolder: 700;

// Custom Fonts.
@font-face {
	font-family: 'proxima-nova';
	src: url('assets/fonts/proxima-nova/proximanova-light-webfont.eot');
	src: url('assets/fonts/proxima-nova/proximanova-light-webfont.eot?#iefix') format('embedded-opentype'),
		 url('assets/fonts/proxima-nova/proximanova-light-webfont.woff2') format('woff2'),
		 url('assets/fonts/proxima-nova/proximanova-light-webfont.woff') format('woff'),
		 url('assets/fonts/proxima-nova/proximanova-light-webfont.ttf') format('truetype'),
		 url('assets/fonts/proxima-nova/proximanova-light-webfont.svg#proxima_novalight') format('svg');
	font-weight: 300;
	font-style: normal;
}

@font-face {
	font-family: 'proxima-nova';
	src: url('assets/fonts/proxima-nova/proximanova-regular-webfont.eot');
	src: url('assets/fonts/proxima-nova/proximanova-regular-webfont.eot?#iefix') format('embedded-opentype'),
		 url('assets/fonts/proxima-nova/proximanova-regular-webfont.woff2') format('woff2'),
		 url('assets/fonts/proxima-nova/proximanova-regular-webfont.woff') format('woff'),
		 url('assets/fonts/proxima-nova/proximanova-regular-webfont.ttf') format('truetype'),
		 url('assets/fonts/proxima-nova/proximanova-regular-webfont.svg#proxima_novaregular') format('svg');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'proxima-nova';
	src: url('assets/fonts/proxima-nova/proximanova-semibold-webfont.eot');
	src: url('assets/fonts/proxima-nova/proximanova-semibold-webfont.eot?#iefix') format('embedded-opentype'),
		 url('assets/fonts/proxima-nova/proximanova-semibold-webfont.woff2') format('woff2'),
		 url('assets/fonts/proxima-nova/proximanova-semibold-webfont.woff') format('woff'),
		 url('assets/fonts/proxima-nova/proximanova-semibold-webfont.ttf') format('truetype'),
		 url('assets/fonts/proxima-nova/proximanova-semibold-webfont.svg#proxima_novasemibold') format('svg');
	font-weight: 600;
	font-style: normal;
}

@font-face {
	font-family: 'proxima-nova';
	src: url('assets/fonts/proxima-nova/proximanova-bold-webfont.eot');
	src: url('assets/fonts/proxima-nova/proximanova-bold-webfont.eot?#iefix') format('embedded-opentype'),
		 url('assets/fonts/proxima-nova/proximanova-bold-webfont.woff2') format('woff2'),
		 url('assets/fonts/proxima-nova/proximanova-bold-webfont.woff') format('woff'),
		 url('assets/fonts/proxima-nova/proximanova-bold-webfont.ttf') format('truetype'),
		 url('assets/fonts/proxima-nova/proximanova-bold-webfont.svg#proxima_novabold') format('svg');
	font-weight: 700;
	font-style: normal;
}

// Site.
$site-radius: 0.4rem;
$site-border: 0.1rem solid $border;

// Columns.
$margin:        2.564102564102564%;
$one-half:      48.71794871794871%;
$one-third:     31.62393162393162%;
$one-fifth:     17.94871794871794%;
$one-fourth:    23.07692307692307%;
$one-sixth:     14.52991452991453%;
$one-seventh:   12.08791208791208%;
$one-eighth:    10.25641025641025%;
$one-ninth:     8.831908831908832%;
$two-thirds:    65.81196581196582%;
$two-fourths:   48.71794871794871%;
$two-fifths:    38.46153846153846%;
$two-sixths:    31.62393162393162%;
$three-fourths: 74.35897435897436%;
$three-fifths:  58.97435897435897%;
$three-sixths:  48.71794871794871%;
$four-fifths:   79.48717948717948%;
$four-sixths:   65.81196581196582%;
$five-sixths:   82.90598290598291%;

// Media Queries.
@mixin breakpoint( $breakpoint ) {

    @if map-has-key( $breakpoints, $breakpoint ) {

        @media ( min-width: #{ map-get( $breakpoints, $breakpoint ) } ) {
            @content;
        }

    } @else if type_of( $breakpoint ) == number and unit( $breakpoint ) == px or unit( $breakpoint ) == em or unit( $breakpoint ) == rem {

        @media (min-width: $breakpoint ) {
            @content;
        }

    } @else {

        @warn "No value could be retrieved from `#{$breakpoint}`. "
              + "Please make sure it is defined in `$breakpoints` map, or it is a valid number with supported unit of px, em or rem.";
    }
}

// Clearfix.
@mixin clearfix {
	clear: both;

	&:before,
	&:after {
		clear: both;
		display: block;
		content: '';
	}
}

// Transitions.
@mixin transition {
	-webkit-transition: all .3s ease;
	-moz-transition: all .3s ease;
	-o-transition: all .3s ease;
	transition: all .3s ease;
}
